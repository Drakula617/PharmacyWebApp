@using PharmacyWebApp.Models.Tables;
@using PharmacyWebApp.Models.Tables.ProductClasses;
@model Warehouse;
<head>
    <link href="/css/site.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <div id="div-parties">
        <form onsubmit="return false;" v-on:submit="addParty">
            <a class="link-back" href="/Warehouse/WarehousePage/?id=@Model.Pharmacy.Id">Назад</a>
            <input class="input-field" type="text" v-model="newparty.CountProducts" required />
            <div class="select-box">
                <select v-model="newparty.Product">
                    <option v-for="product in products" :value="product" :key="product.id">{{product.name}}</option>
                </select>
            </div>
            <input type="submit" value="Добавить" class="btn-add" />
        </form>
        

        <table class="table">
            <thead>
                <tr>
                    <th>Номер</th>
                    <th>Товар</th>
                    <th>Количестсво</th>
                    <th>Склад</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="party in parties">
                    <td>{{party.id}}</td>
                    <td>{{party.product.name}}</td>
                    <td>{{party.countProducts}}</td>
                    <td>
                        {{party.warehouse.name}}</td>
                    <td>
                        <a v-on:click="removeParty(party.id)" href="#">Удалить</a>
                    </td>
                </tr>
            </tbody>
        </table>

    </div>
    <script type="text/javascript">

        var partiesVue = new Vue({
            el: '#div-parties',
            data:
            {
                newparty:
                {
                    Product:{},
                    Warehouse: JSON.parse('@Html.Raw(Json.Serialize(Model))'),
                    CountProducts:0
                },
                parties: @Html.Raw(Json.Serialize(Model.Parties)),
                products:[]
            },
            mounted()
            {
                this.getProducts();
            },
            methods:
            {
                productLog: function()
                {
                    console.log();
                },
                getProducts: function()
                {
                    axios.post('/Product/GetProducts').then((response)=>
                    {
                        this.products = response.data;
                    });
                },
                removeParty: function(id)
                {
                    axios.post('/Party/RemoveParty/?id='+ id ).
                    then((response)=> {
                        this.parties = this.parties.filter(party=> party.id != id);
                    });
                },
                addParty: function()
                {
                    axios.post('/Party/AddParty', this.newparty)
                    .then((response)=> {
                        this.parties.push(response.data);
                    });
                }
            }
        });
    </script>
</body>
